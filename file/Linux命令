man：
   是 Linux 的帮助手册，即 manual 。因为大多数程序都会自带手册，
   所以可以通过 man 命令获取帮助。执行以后，在 man page 页面中按 q 退出。
   例： man ls

--help: 般程序都会有这个参数，会输出最简单有用的介绍
        例： ls --help

Tab:
    补全是非常有用的一个功能，可以用来自动补全命令或文件名
    未输入状态下连按两次 Tab 列出所有可用命令
    已输入部分命令名或文件名，按 Tab 进行自动补全


reboot:
      重启命令
      #reboot    ### '$' 和 '#' 的区别在于 '$' 普通用户即可执行
                 ### 而 '#' 为 root 用户才可执行，或普通用户使用 'sudo'

poweroff：
      关机命令
      poweroff  ### 马上关机


pwd:
    用于返回当前工作目录的名字，为绝对路径名

mkdir:
      用于新建文件夹
    例：
      mkdir folder
      mkdir -p folder/subfolder  ### -p 参数为当父目录存在时忽略，若不存在则建立，用此参数可建立多级文件夹

touch:
    新建一个文件
    touch [options] filename
    -a：或--time=atime或--time=access或--time=use 只更改存取时间；
    -c：或--no-create 不建立任何文件；
    -d：<时间日期> 使用指定的日期时间，而非现在的时间；
    -f：此参数将忽略不予处理，仅负责解决BSD版本touch指令的兼容性问题；
    -m：或--time=mtime或--time=modify 只更该变动时间；
    -r：<参考文件或目录> 把指定文件或目录的日期时间，统统设成和参考文件或目录的日期时间相同；
    -t：<日期时间> 使用指定的日期时间，而非现在的时间；
    --help：在线帮助；
    --version：显示版本信息。

tar -zxvf : 解压文件
zip -r filename.zip filesdir : zip 来压缩文件
unzip filename.zip: 解压zip文件到当前目录

source /etc/profile

rm:
    删除文件。
    rm filename      ### 删除 filename
    rm -i filename   ### 删除 filename 前提示，若多个文件则每次提示
    rm -rf folder/subfolder/  ### 递归删除 subfolder 下所有文件及文件夹，包括 subfolder 自身
    rm -d folder     ###  删除空文件夹

cp:
    即 copy ，复制文件
    cp source dest          ### 将 source 复制到 dest
    cp folder/*  dest       ### 将 folder 下所有文件(不含子文件夹中的文件)复制到 dest
    cp -r folder  dest      ### 将 folder 下所有文件（包含子文件夹中的所有文件）复制到 dest

mv:
    即 move ，移动文件。
    mv source  folder        ### 将 source 移动到 folder 下，完成后则为  folder/source
    mv -i source folder      ### 在移动时，若文件已存在则提示 **是否覆盖**
    mv source dest           ### 在 dest 不为目录的前提下，重命名 source 为 dest

vim：
   文本编辑器 o 进入编辑状态，Esc退出编辑状态

    -d  当Vim命令后面跟着多个文件名时，可以使用该参数来自动比较这几个文件的差异，尤其在比较新旧版本的文件有何改变时很管用；
    -m  文本可以编辑，但是无法将修改保存的模式；
    -M  文本不可编辑的模式；
    -b  二进制模式，方便查看/编辑二进制或可执行文件；
    -o  当Vim命令后面跟着n个文件名时，该参数将使得Vim开辟n个窗口（从上到下），每个窗口加载一个文件；
    -o<N>  启动后横向开辟N个窗口；
    -O  当Vim命令后面跟着n个文件名时，该参数将使得Vim开辟n个窗口（从左到右），每个窗口加载一个文件；
    -O<N>  启动后垂直开辟N个窗口；
    +  启动后光标跳到文件末尾；
    +<num>  启动后光标跳到第文件的num行。


    1、结合Shift键输入“:”，切换到命令模式，输入“q”后回车。这属于正常退出，只有当文件未被修改或者修改已经被保存的情况下方能成功退出，否则将提示有修改尚未保存而无法退出。
    2、切换到命令模式，输入“q!”后回车。这属于强制退出，当有文件被修改而尚未保存，则强制退出将舍弃修改。
    3、切换到命令模式，输入“wq”后回车。这属于先保存后退出，只有对打开的文件可写且有编辑权限的情况下方能成功退出，否则将提示权限不够或者文件只读等警告。
    4、切换到命令模式，输入“wq!”后回车。这属于强制保存并退出，只有对打开的文件有编辑权限的情况下方能成功退出，否则将提示权限不够等警告。有访问权限的只读文件即便修改过，也能成功保存并退出。
    6、在一般模式下输入“ZZ”。这属于先保存后退出，同“wq”。
    7、在一般模式下输入“ZQ”。这属于强制退出，同“q!”。


ping：
    主要用于测试网络连通，通过对目标机器发送数据包来测试两台主机是否连通，及延时情况。
    ping locez.com    ### 通过域名 ping，若 DNS 未设置好，可能无法 ping 通
    ping 211.157.2.94   ### 通过 IP 地址 ping ，若无法 ping 通可能是网络连接出现问题


scp：
   通常用于Linux的跨主机之间的文件和目录的复制，基于ssh登陆进行安全远程文件拷贝的命令

   scp -P 22 /Users/wzw/linux_test.png  root@116.196.91.232:/usr/ndk/
   ## 将本地文件上传到服务器上
   scp -P 22 -r /Users/wzw/ndk/  root@116.196.91.232:/usr/ndk/
   #将本地目录上传到服务器上

   scp -P 22 root@116.196.91.232:/usr/ndk/ /Users/wzw/linux_test.png
   ## 获取远程服务器上的文件
   scp -P 22 -r root@www.vpser.net:/root/lnmp0.4/ /Users/wzw/
   ##获取远程服务器上的目录

chown:
    用于改变一个文件的所有者及所在的组。
    chown user filename        ### 改变 filename 的所有者为 user
    chown user:group filename  ### 改变 filename 的所有者为 user，组为 group
    chown -R root folder       ### 改变 folder 文件夹及其子文件的所有者为 root


useradd:
    用于添加一个普通用户
    useradd -m -g users -G audio -s /usr/bin/bash newuser
    ### -m 创建 home 目录， -g 所属的主组， -G 指定该用户在哪些附加组， -s 设定默认的 shell ，newuser 为新的用户名

passwd:
      用于改变用户登录密码。
      passwd             ### 不带参数更改当前用户密码
      passwd newuser     ### 更改上述新建的 newuser 的用户密码

chmod:
   永远更改一个文件的权限，主要有 读取 、 写入 、 执行 ，三种权限，
   其中 所有者 、 用户组 、 其他 各占三个，因此 ls -l 可以看到如下的信息
   -rwxr--r-- 1 locez users   154 Aug 30 18:09 filename
   其中 r=read ， w=write ， x=execute

   chmod +x filename        ### 为 user ，group ，others 添加执行权限
   chmod -x filename        ### 取消 user ， group ，others 的执行权限
   chmod +w filename        ### 为 user 添加写入权限
   chmod ugo=rwx filename   ### 设置 user ，group ，others 具有 读取、写入、执行权限
   chmod ug=rw filename     ### 设置 user ，group 添加 读取、写入权限
   chmod ugo=--- filename   ### 取消所有权限



find：
    用于查找文件，但更为强大，支持正则，并且可将查找结果传递到其他命令。
    find . -name PATTERN    ### 从当前目录查找符合 PATTERN 的文件
    find /home -name PATTERN -exec ls -l {} \;  # 从 /home 文件查找所有符合 PATTERN 的文件，并交由 ls 输出详细信息


wget：
   一个下载工具，简单强大。
   wget -O newname.md https://github.com/LCTT/TranslateProject/blob/master/README.md
        ### 下载 README 文件并重命名为 newname.md
   wget -c url     ### 下载 url 并开启断点续传


nano:
    是一个简单实用的文本编辑器，使用简单。 编辑完后，ctrl + X 提示是否保存，按 y 确定保存即可。
    在使用过程中可用 ctrl + G 获取帮助。
    nano  filename       ### 编辑 filename 文件，若文件不存在，则新打开一个文件，若退出时保存，则创建该文件


cat:
    用于输出文件内容到 Terminal
    cat /etc/locale.gen     ### 输出 locale.gen 的内容
    cat -n /etc/locale.gen  ### 输出 locale.gen 的内容并显示行号


more:
    more 与 cat 相似，都可以查看文件内容，所不同的是，当一个文档太长时，
    cat 只能展示最后布满屏幕的内容，前面的内容是不可见的。这时候可用 more 逐行显示内容
    more /etc/locale.gen
    more +100 /etc/locale.gen       ### 从 100 行开始显示


less:
    less 与 more 相似，不过 less 支持上下滚动查看内容，而 more 只支持逐行显示。
    less /etc/locale.gen
    less +100 /etc/locale.gen



    在终端输入:
ls -l xxx.xxx （xxx.xxx是文件名）
那么就会出现相类似的信息，主要都是这些：
-rw-rw-r--

一共有10位数
其中： 最前面那个 - 代表的是类型
     中间那三个 rw-    代表的是所有者（user）
     然后那三个 rw-    代表的是组群（group）
     最后那三个 r--    代表的是其他人（other）

然后我再解释一下后面那9位数：
   r 表示文件可以被读（read）
   w 表示文件可以被写（write）
   x 表示文件可以被执行（如果它是程序的话）
   - 表示相应的权限还没有被授予


文件权限
在终端输入：
chmod o+w xxx.xxx
表示给其他人授予写xxx.xxx这个文件的权限

chmod go-rw xxx.xxx
表示删除xxx.xxx中组群和其他人的读和写的权限

其中：
  u 代表所有者（user）
  g 代表所有者所在的组群（group）
  o 代表其他人，但不是u和g （other）
  a 代表全部的人，也就是包括u，g和o

  r 表示文件可以被读（read）
  w 表示文件可以被写（write）
  x 表示文件可以被执行（如果它是程序的话）

其中：rwx也可以用数字来代替
   r ------------4
   w -----------2
   x ------------1
   - ------------0

行动：
  + 表示添加权限
  - 表示删除权限
  = 表示使之成为唯一的权限


-rw-------    (600) 只有所有者才有读和写的权限
-rw-r--r--    (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限
-rwx------    (700) 只有所有者才有读，写，执行的权限
-rwxr-xr-x    (755) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限
-rwx--x--x    (711) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限
-rw-rw-rw-    (666) 每个人都有读写的权限
-rwxrwxrwx    (777) 每个人都有读写和执行的权限


grep:
     主要用于返回匹配的项目，支持正则表达式。
     grep PATTERN filename      ### 返回所有含有 PATTERN 的行
     grep zh_CN /etc/locale.gen ### 返回所有含 zh_CN 的行
