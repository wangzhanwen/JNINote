
#include <iostream>
using namespace std;


//C++ 类型转换:
//  1. static_cast
//  2. const_cast
//  3. dynamic_cast
//  4. reinterpret_cast

// C： 原始类型转换，所有情况都是一种写法 ，可读性不高，有可能有潜在风险



/*

int m = 9;
char n = 'n';
void* func(int type){
//    switch (type) {
//        case 1:{
//            int m = 9;
//            return &m;
//            break;
//        }
//
//        case 2:{
//            char n = 'n';
//            return &n;
//            break;
//        }
//
//        default:
//            break;
//    }


    if (type == 1) {
        return &m;
    }
    if (type == 2) {
        return &n;
    }
    return NULL;
}

void func1(char *c_p){
    cout<< *c_p<<endl;
}

int main(int argc, const char * argv[]) {
    //int i = 9;
    //自动类型转换
    //double d = i;
    //d = 9.8;
    // int i = d;

    //int i = 8;
    //double d = 9.8;
    //i = static_cast<int>(d);
    //cout<<i<<endl;

    //char* k = (char*)func(2);
    //char* k = static_cast<char*>(func(2));
    //cout<<k<<endl;

    //C++  意图明显
    func1(static_cast<char*>(func(2)));
    //C
    func1((char*)(func(2)));
    return 0;
}

 */


/*
//const_cast<>()

void func(const char c[]){
    //char* c_p = (char*)c;
    //通过指针间接赋值
    // c_p[1] = 'x';
    //cout<<c<<endl;

    char* c_p =  const_cast<char*>(c);
    c_p[1] = 's';
    cout<<c<<endl;

  }

int main(int argc, const char * argv[]) {
    char c[] = "hello";
    func(c);
    return 0;
}

*/

/*
//dynamic_cast<>()

class Person{
public :
    virtual void print(){
        cout<<"人"<<endl;
    }
};

class Man: public Person{
public :
    virtual void print(){
        cout<<"男人"<<endl;
    }

    void chasing(){
        cout<<"泡妞"<<endl;

    }
};

class Women: public Person{
public :
    virtual void print(){
        cout<<"女人"<<endl;
    }
    void careBaby(){
       cout<<"照顾宝宝"<<endl;
    }
};

void func(Person* obj){
    //obj->print();

    //并不知道转型失败
    //Man* m = (Man*)obj;
    //m->print();
    //m->chasing();

    //转型失败，返回NULL
    Man* m = dynamic_cast<Man*>(obj);
    if (m !=NULL) {
       m->chasing();
    }

    Women* w = dynamic_cast<Women*>(obj);
    if (w !=NULL) {
        w->careBaby();
    }


}

int main(int argc, const char * argv[]) {
    Women w0;
    Person* p0 = &w0;

    func(p0);
    return 0;
}

*/


void func0(){
    cout<<"func0"<<endl;
}

char* func1(){
    cout<<"func1"<<endl;
  return "abc";
}

typedef void(*f_p)();
int main(int argc, const char * argv[]) {
    //函数指针数组
    f_p f_array[6];
    //赋值
    f_array[0] = func0;
    //f_array[1] = (f_p)func1;
    f_array[1] = reinterpret_cast<f_p>(func1);

    f_array[0]();
    f_array[1]();
    return 0;
}
